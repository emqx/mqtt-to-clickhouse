bridges {
  clickhouse {
    "create-order" {
      batch_value_separator = ", "
      connect_timeout = "15s"
      database = "iot_data"
      enable = true
      password = "public"
      pool_size = 8
      resource_opts {
        auto_restart_interval = "60s"
        batch_size = 1
        health_check_interval = "15s"
        inflight_window = 100
        max_buffer_bytes = "256MB"
        query_mode = "async"
        request_timeout = "15s"
        start_timeout = "5s"
        worker_pool_size = 16
      }
      sql = "INSERT INTO charging_order (\n  idTag, \n  connectorId,\n  transactionId,\n  startTimestamp,\n  endTimestamp,\n  duration,\n  reservationId,\n  stackLevel,\n  meterStart,\n  meterStop,\n  meter,\n  stopReason\n) VALUES (\n '${record.idTag}', \n '${record.connectorId}',\n  '${record.transactionId}',\n  toDateTime(${record.startTimestamp} / 1000),\n  toDateTime(${record.endTimestamp} / 1000),\n  ${record.duration},\n  '',\n  0,\n  ${record.meterStart},\n  ${record.meterStop},\n  ${record.meter},\n  '${record.reason}'\n)"
      url = "http://clickhouse:8123"
      username = "admin"
    }
    "save-charging-record" {
      batch_value_separator = ", "
      connect_timeout = "15s"
      database = "iot_data"
      enable = true
      password = "public"
      pool_size = 8
      resource_opts {
        auto_restart_interval = "60s"
        batch_size = 1
        batch_time = "0ms"
        health_check_interval = "15s"
        inflight_window = 100
        max_buffer_bytes = "256MB"
        query_mode = "async"
        request_timeout = "15s"
        start_after_created = "true"
        start_timeout = "5s"
        worker_pool_size = 16
      }
      sql = "INSERT INTO charging_record (\n  connectorId,\n  transactionId,\n  timestamp,\n  voltage,\n  currentInput,\n  power,\n  meter,\n  currentTemperature\n) VALUES (\n  '${record.connectorId}',\n  '${record.transactionId}',\n  toDateTime(${record.timestamp}/1000),\n  ${meterValue.voltage},\n  ${meterValue.currentInput},\n  ${meterValue.power},\n  ${meterValue.meter},\n  ${meterValue.currentTemperature}\n)\n"
      url = "http://clickhouse:8123"
      username = "admin"
    }
  }
}
rule_engine {
  ignore_sys_message = true
  jq_function_default_timeout = "10s"
  rules {
    "create-order" {
      actions = ["clickhouse:create-order"]
      description = ""
      enable = true
      metadata {created_at = 1688110650627}
      name = ""
      sql = "SELECT\n  payload.payload as record\nFROM\n  \"mqttx/simulate/charge/+/StopTransaction\""
    }
    "save-charging-record" {
      actions = ["clickhouse:save-charging-record"]
      description = ""
      enable = true
      metadata {created_at = 1688110699026}
      name = ""
      sql = "SELECT\n  payload.payload as record,\n  record.meterValue as meterValue\nFROM\n  \"mqttx/simulate/charge/+/MeterValues\""
    }
  }
}
